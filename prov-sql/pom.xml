<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">


  <parent>
    <artifactId>ProvToolbox</artifactId>
    <groupId>org.openprovenance.prov</groupId>
    <version>0.3.1-SNAPSHOT</version>
  </parent>


  <modelVersion>4.0.0</modelVersion>
  <artifactId>prov-sql</artifactId>
  <name>PROV-SQL</name>
  <packaging>jar</packaging>
  <description>Java Objects representing the PROV model,  XML serialiser/deserialiser for them, and ORM mapping generated by HyperJaxb.</description>




  <dependencies>

    <dependency>
      <groupId>org.openprovenance.prov</groupId>
      <artifactId>prov-model</artifactId>
      <version>0.3.1-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>org.openprovenance.prov</groupId>
      <artifactId>prov-xml</artifactId>
      <version>0.3.1-SNAPSHOT</version>

      <exclusions> 
	<exclusion><!-- Equals defined in this jar is incompatible with one used by hyperjaxb. Instead, use jaxb2-basics-runtime below -->
	  <groupId>org.jvnet.jaxb2_commons</groupId>
	  <artifactId>runtime</artifactId>
	</exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.openprovenance.prov</groupId>
      <artifactId>prov-xml</artifactId>
      <version>0.3.1-SNAPSHOT</version>
      <classifier>tests</classifier>
      <scope>test</scope>

      <exclusions>
	<exclusion><!-- Equals defined in this jar is incompatible with one used by hyperjaxb. Instead, use jaxb2-basics-runtime below -->
	  <groupId>org.jvnet.jaxb2_commons</groupId>
	  <artifactId>runtime</artifactId>
	</exclusion>
      </exclusions>

    </dependency>


    <dependency>
      <groupId>org.jvnet.jaxb2_commons</groupId>
      <artifactId>jaxb2-basics-runtime</artifactId>
      <version>0.6.2</version>
    </dependency>

    <dependency>
     <groupId>com.sun.xml.bind</groupId>
     <artifactId>jaxb-impl</artifactId>
     <version>2.2.4</version>
    </dependency>

    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>${jaxb.api.version}</version>
    </dependency>


    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.0-api</artifactId>
      <version>1.0.0.Final</version>
    </dependency>
    
    <dependency>
      <groupId>org.jvnet.hyperjaxb3</groupId>
      <artifactId>hyperjaxb3-ejb-runtime</artifactId>
      <version>0.5.6</version>
    </dependency>

    <!-- roundrip testing ... is generated in the main, not in test,
         ... and to compile it requires junit :-( -->

    <dependency>
      <groupId>org.jvnet.hyperjaxb3</groupId>
      <artifactId>hyperjaxb3-ejb-roundtrip</artifactId>
      <version>0.5.6</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.4</version>
    </dependency>



    <!--  Hibernate Dependencies  -->

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>3.6.5.Final</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate</artifactId>
      <version>3.2.5.ga</version>
      <scope>test</scope>
    </dependency>

    <!--  Database  -->
    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>1.8.0.7</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.4</version>
    </dependency>

    <!-- If we want to run moxy
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
	  <artifactId>org.eclipse.persistence.moxy</artifactId>
   	  <version>2.3.2</version>
    </dependency>

-->


    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.1</version>
    </dependency>



    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>


  </dependencies>


 


  <build>




     <plugins>


       <plugin>
	 <groupId>org.jvnet.hyperjaxb3</groupId>
	 <artifactId>maven-hyperjaxb3-plugin</artifactId>
	 <version>0.5.6</version>
	 <executions>
	   <execution>
	     <goals>
	       <goal>generate</goal>
	     </goals>
	   </execution>
	 </executions>
	 <configuration>
	   <extension>true</extension>
	   <roundtripTestClassName>RoundtripTest</roundtripTestClassName>
	 </configuration>
       </plugin>

       <plugin>
	 <inherited>true</inherited>
	 <artifactId>maven-compiler-plugin</artifactId>
	 <configuration>
	   <source>1.5</source>
	   <target>1.5</target>
	 </configuration>
       </plugin>


       <plugin>
         <groupId>org.jvnet.jaxb2.maven2</groupId>
	 <artifactId>maven-jaxb2-plugin</artifactId>
	 <version>0.8.2</version>
         <executions>
           <execution>
             <id>go1</id>
             <phase>generate-sources</phase>
             <goals>
               <goal>generate</goal>
             </goals>
             <configuration>
               <schemaDirectory>src/main/resources</schemaDirectory>
               <plugins>
		 <plugin>
		   <groupId>org.jvnet.hyperjaxb3</groupId>
		   <artifactId>hyperjaxb3-ejb-plugin</artifactId>
		   <version>0.5.6</version>
		 </plugin>
	       </plugins>
               <schemaIncludes>
                 <schemaInclude>**/prov-20130307.xsd</schemaInclude>
               </schemaIncludes>
               <bindingDirectory>src/main/resources</bindingDirectory>
               <bindingIncludes>
                  <bindingInclude>bindings.xjb</bindingInclude>
               </bindingIncludes> 

               <debug>true</debug> 
               <strict>false</strict> 
               <verbose>true</verbose>     
               <extension>true</extension>     

               <args>
                 <arg>-npa</arg>
			     <arg>-Xequals</arg>
  			     <arg>-XhashCode</arg>
			     <arg>-XtoString</arg>
			     <arg>-Xinheritance</arg>
 			     <arg>-Xhyperjaxb3-ejb</arg>
			     <arg>-Xhyperjaxb3-ejb-roundtripTestClassName=RoundtripTest</arg> 
               </args>
            </configuration>
          </execution>
        </executions>
      </plugin>




      





      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>patch.source.files</id>
            <phase>generate-sources</phase>
            <goals>
             <goal>run</goal>
            </goals>
            <configuration>
              <tasks>

<!-- What I wanted to do, with a many to many join table
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public List&lt;Attribute&gt; getAny()/ 	private void ignoreMe() {} @javax.persistence.ManyToMany(targetEntity = org.openprovenance.prov.sql.Attribute.class, cascade = { CascadeType.ALL }) @javax.persistence.JoinTable (name=&quot;ATTRIBUTE_JOIN&quot;, joinColumns={@JoinColumn(name = &quot;ENTITY&quot;)}, inverseJoinColumns={@JoinColumn(name = &quot;ATTRIBUTE&quot;)}) public List&lt;Attribute&gt; getAny ()/" />
  	              <arg value="-iBAK" />
  	              <arg value="Entity.java" />
                </exec>
-->

                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public List&lt;Attribute&gt; getAny()/ 	private void ignoreMe() {} @OneToMany(targetEntity = org.openprovenance.prov.sql.Attribute.class, cascade = { CascadeType.ALL }) @JoinColumn(name = &quot;ENTITY&quot;) public List&lt;Attribute&gt; getAny ()/" />
  	              <arg value="-iBAK" />
  	              <arg value="Entity.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public List&lt;Attribute&gt; getAny()/ 	private void ignoreMe() {} @OneToMany(targetEntity = org.openprovenance.prov.sql.Attribute.class, cascade = { CascadeType.ALL }) @JoinColumn(name = &quot;ACTIVITY&quot;) public List&lt;Attribute&gt; getAny ()/" />
  	              <arg value="-iBAK" />
  	              <arg value="Activity.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public List&lt;Attribute&gt; getAny()/ 	private void ignoreMe() {} @OneToMany(targetEntity = org.openprovenance.prov.sql.Attribute.class, cascade = { CascadeType.ALL }) @JoinColumn(name = &quot;AGENT&quot;) public List&lt;Attribute&gt; getAny ()/" />
  	              <arg value="-iBAK" />
  	              <arg value="Agent.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public List&lt;Attribute&gt; getAny()/ 	private void ignoreMe() {} @OneToMany(targetEntity = org.openprovenance.prov.sql.Attribute.class, cascade = { CascadeType.ALL }) @JoinColumn(name = &quot;WASATTRIBUTEDTO&quot;) public List&lt;Attribute&gt; getAny ()/" />
  	              <arg value="-iBAK" />
  	              <arg value="WasAttributedTo.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public List&lt;Attribute&gt; getAny()/ 	private void ignoreMe() {} @OneToMany(targetEntity = org.openprovenance.prov.sql.Attribute.class, cascade = { CascadeType.ALL }) @JoinColumn(name = &quot;WASASSOCIATEDWITH&quot;) public List&lt;Attribute&gt; getAny ()/" />
  	              <arg value="-iBAK" />
  	              <arg value="WasAssociatedWith.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public List&lt;Attribute&gt; getAny()/ 	private void ignoreMe() {} @OneToMany(targetEntity = org.openprovenance.prov.sql.Attribute.class, cascade = { CascadeType.ALL }) @JoinColumn(name = &quot;WASGENERATEDBY&quot;) public List&lt;Attribute&gt; getAny ()/" />
  	              <arg value="-iBAK" />
  	              <arg value="WasGeneratedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public List&lt;Attribute&gt; getAny()/ 	private void ignoreMe() {} @OneToMany(targetEntity = org.openprovenance.prov.sql.Attribute.class, cascade = { CascadeType.ALL }) @JoinColumn(name = &quot;WASSTARTEDBY&quot;) public List&lt;Attribute&gt; getAny ()/" />
  	              <arg value="-iBAK" />
  	              <arg value="WasStartedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public List&lt;Attribute&gt; getAny()/ 	private void ignoreMe() {} @OneToMany(targetEntity = org.openprovenance.prov.sql.Attribute.class, cascade = { CascadeType.ALL }) @JoinColumn(name = &quot;WASENDEDBY&quot;) public List&lt;Attribute&gt; getAny ()/" />
  	              <arg value="-iBAK" />
  	              <arg value="WasEndedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public List&lt;Attribute&gt; getAny()/ 	private void ignoreMe() {} @OneToMany(targetEntity = org.openprovenance.prov.sql.Attribute.class, cascade = { CascadeType.ALL }) @JoinColumn(name = &quot;WASINFORMEDBY&quot;) public List&lt;Attribute&gt; getAny ()/" />
  	              <arg value="-iBAK" />
  	              <arg value="WasInformedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public List&lt;Attribute&gt; getAny()/ 	private void ignoreMe() {} @OneToMany(targetEntity = org.openprovenance.prov.sql.Attribute.class, cascade = { CascadeType.ALL }) @JoinColumn(name = &quot;WASINFLUENCEDBY&quot;) public List&lt;Attribute&gt; getAny ()/" />
  	              <arg value="-iBAK" />
  	              <arg value="WasInfluencedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public List&lt;Attribute&gt; getAny()/ 	private void ignoreMe() {} @OneToMany(targetEntity = org.openprovenance.prov.sql.Attribute.class, cascade = { CascadeType.ALL }) @JoinColumn(name = &quot;ACTEDONBEHALFOF&quot;) public List&lt;Attribute&gt; getAny ()/" />
  	              <arg value="-iBAK" />
  	              <arg value="ActedOnBehalfOf.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public List&lt;Attribute&gt; getAny()/ 	private void ignoreMe() {} @OneToMany(targetEntity = org.openprovenance.prov.sql.Attribute.class, cascade = { CascadeType.ALL }) @JoinColumn(name = &quot;USED&quot;) public List&lt;Attribute&gt; getAny ()/" />
  	              <arg value="-iBAK" />
  	              <arg value="Used.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public List&lt;Attribute&gt; getAny()/ 	private void ignoreMe() {} @OneToMany(targetEntity = org.openprovenance.prov.sql.Attribute.class, cascade = { CascadeType.ALL }) @JoinColumn(name = &quot;WASINVALIDATEDBY&quot;) public List&lt;Attribute&gt; getAny ()/" />
  	              <arg value="-iBAK" />
  	              <arg value="WasInvalidatedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public List&lt;Attribute&gt; getAny()/ 	private void ignoreMe() {} @OneToMany(targetEntity = org.openprovenance.prov.sql.Attribute.class, cascade = { CascadeType.ALL }) @JoinColumn(name = &quot;WASDERIVEDFROM&quot;) public List&lt;Attribute&gt; getAny ()/" />
  	              <arg value="-iBAK" />
  	              <arg value="WasDerivedFrom.java" />
                </exec>



<!-- Entity -->
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@OneToMany(targetEntity = Entity.EntityAnyItem.*/,/@Basic.*/ {/@Basic.*/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="Entity.java" />
                </exec>

                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@Entity(name = &quot;Entity$EntityAnyItem&quot;)/,/@XmlAccessorType.*/ { s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="Entity.java" />
                </exec>

                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/protected transient List&lt;Entity.EntityAnyItem&gt; anyItems;//" />
  	          <arg value="-iBAK" />
  	          <arg value="Entity.java" />
                </exec>

                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@javax.persistence.Entity(name = &quot;Entity$EntityAnyItem&quot;)/,/^}/ { /^}/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="Entity.java" />
                </exec>

                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ @XmlAccessorType(XmlAccessType.FIELD)//" />
  	          <arg value="-iBAK" />
  	          <arg value="Entity.java" />
                </exec>


<!-- WasEndedBy -->

		<exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@OneToMany(targetEntity = WasEndedBy.WasEndedByAnyItem.*/,/@Basic.*/ {/@Basic.*/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasEndedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@Entity(name = &quot;WasEndedBy$WasEndedByAnyItem&quot;)/,/^}/ { /^}/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasEndedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/protected transient List&lt;WasEndedBy.WasEndedByAnyItem&gt; anyItems;//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasEndedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ @XmlAccessorType(XmlAccessType.FIELD)//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasEndedBy.java" />
                </exec>

<!-- WasStartedBy -->

		<exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@OneToMany(targetEntity = WasStartedBy.WasStartedByAnyItem.*/,/@Basic.*/ {/@Basic.*/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasStartedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@Entity(name = &quot;WasStartedBy$WasStartedByAnyItem&quot;)/,/^}/ { /^}/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasStartedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/protected transient List&lt;WasStartedBy.WasStartedByAnyItem&gt; anyItems;//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasStartedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ @XmlAccessorType(XmlAccessType.FIELD)//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasStartedBy.java" />
                </exec>


<!-- Used -->

		<exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@OneToMany(targetEntity = Used.UsedAnyItem.*/,/@Basic.*/ {/@Basic.*/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="Used.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@Entity(name = &quot;Used$UsedAnyItem&quot;)/,/^}/ { /^}/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="Used.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/protected transient List&lt;Used.UsedAnyItem&gt; anyItems;//" />
  	          <arg value="-iBAK" />
  	          <arg value="Used.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ @XmlAccessorType(XmlAccessType.FIELD)//" />
  	          <arg value="-iBAK" />
  	          <arg value="Used.java" />
                </exec>


<!-- WasGeneratedBy -->

		<exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@OneToMany(targetEntity = WasGeneratedBy.WasGeneratedByAnyItem.*/,/@Basic.*/ {/@Basic.*/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasGeneratedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@Entity(name = &quot;WasGeneratedBy$WasGeneratedByAnyItem&quot;)/,/^}/ { /^}/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasGeneratedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/protected transient List&lt;WasGeneratedBy.WasGeneratedByAnyItem&gt; anyItems;//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasGeneratedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ @XmlAccessorType(XmlAccessType.FIELD)//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasGeneratedBy.java" />
                </exec>

<!-- WasInvalidatedBy -->

		<exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@OneToMany(targetEntity = WasInvalidatedBy.WasInvalidatedByAnyItem.*/,/@Basic.*/ {/@Basic.*/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasInvalidatedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@Entity(name = &quot;WasInvalidatedBy$WasInvalidatedByAnyItem&quot;)/,/^}/ { /^}/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasInvalidatedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/protected transient List&lt;WasInvalidatedBy.WasInvalidatedByAnyItem&gt; anyItems;//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasInvalidatedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ @XmlAccessorType(XmlAccessType.FIELD)//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasInvalidatedBy.java" />
                </exec>

<!-- WasAttributedTo -->

		<exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@OneToMany(targetEntity = WasAttributedTo.WasAttributedToAnyItem.*/,/@Basic.*/ {/@Basic.*/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasAttributedTo.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@Entity(name = &quot;WasAttributedTo$WasAttributedToAnyItem&quot;)/,/^}/ { /^}/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasAttributedTo.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/protected transient List&lt;WasAttributedTo.WasAttributedToAnyItem&gt; anyItems;//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasAttributedTo.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ @XmlAccessorType(XmlAccessType.FIELD)//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasAttributedTo.java" />
                </exec>

<!-- WasAssociatedWith -->

		<exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@OneToMany(targetEntity = WasAssociatedWith.WasAssociatedWithAnyItem.*/,/@Basic.*/ {/@Basic.*/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasAssociatedWith.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@Entity(name = &quot;WasAssociatedWith$WasAssociatedWithAnyItem&quot;)/,/^}/ { /^}/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasAssociatedWith.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/protected transient List&lt;WasAssociatedWith.WasAssociatedWithAnyItem&gt; anyItems;//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasAssociatedWith.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ @XmlAccessorType(XmlAccessType.FIELD)//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasAssociatedWith.java" />
                </exec>

<!-- WasDerivedFrom -->

		<exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@OneToMany(targetEntity = WasDerivedFrom.WasDerivedFromAnyItem.*/,/@Basic.*/ {/@Basic.*/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasDerivedFrom.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@Entity(name = &quot;WasDerivedFrom$WasDerivedFromAnyItem&quot;)/,/^}/ { /^}/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasDerivedFrom.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/protected transient List&lt;WasDerivedFrom.WasDerivedFromAnyItem&gt; anyItems;//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasDerivedFrom.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ @XmlAccessorType(XmlAccessType.FIELD)//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasDerivedFrom.java" />
                </exec>

<!-- WasInformedBy -->

		<exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@OneToMany(targetEntity = WasInformedBy.WasInformedByAnyItem.*/,/@Basic.*/ {/@Basic.*/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasInformedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@Entity(name = &quot;WasInformedBy$WasInformedByAnyItem&quot;)/,/^}/ { /^}/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasInformedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/protected transient List&lt;WasInformedBy.WasInformedByAnyItem&gt; anyItems;//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasInformedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ @XmlAccessorType(XmlAccessType.FIELD)//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasInformedBy.java" />
                </exec>

<!-- WasInfluencedBy -->

		<exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@OneToMany(targetEntity = WasInfluencedBy.WasInfluencedByAnyItem.*/,/@Basic.*/ {/@Basic.*/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasInfluencedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@Entity(name = &quot;WasInfluencedBy$WasInfluencedByAnyItem&quot;)/,/^}/ { /^}/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="WasInfluencedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/protected transient List&lt;WasInfluencedBy.WasInfluencedByAnyItem&gt; anyItems;//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasInfluencedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ @XmlAccessorType(XmlAccessType.FIELD)//" />
  	          <arg value="-iBAK" />
  	          <arg value="WasInfluencedBy.java" />
                </exec>

<!-- ActedOnBehalfOf -->

		<exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@OneToMany(targetEntity = ActedOnBehalfOf.ActedOnBehalfOfAnyItem.*/,/@Basic.*/ {/@Basic.*/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="ActedOnBehalfOf.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@Entity(name = &quot;ActedOnBehalfOf$ActedOnBehalfOfAnyItem&quot;)/,/^}/ { /^}/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="ActedOnBehalfOf.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/protected transient List&lt;ActedOnBehalfOf.ActedOnBehalfOfAnyItem&gt; anyItems;//" />
  	          <arg value="-iBAK" />
  	          <arg value="ActedOnBehalfOf.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ @XmlAccessorType(XmlAccessType.FIELD)//" />
  	          <arg value="-iBAK" />
  	          <arg value="ActedOnBehalfOf.java" />
                </exec>


<!-- Activity -->

                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@OneToMany(targetEntity = Activity.ActivityAnyItem.*/,/@Basic.*/ {/@Basic.*/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="Activity.java" />
                </exec>


                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/protected transient List&lt;Activity.ActivityAnyItem&gt; anyItems;//" />
  	          <arg value="-iBAK" />
  	          <arg value="Activity.java" />
                </exec>

                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@Entity(name = &quot;Activity$ActivityAnyItem&quot;)/,/^}/ { /^}/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="Activity.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ @XmlAccessorType(XmlAccessType.FIELD)//" />
  	          <arg value="-iBAK" />
  	          <arg value="Activity.java" />
                </exec>

<!-- Agent -->

                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@OneToMany(targetEntity = Agent.AgentAnyItem.*/,/@Basic.*/ {/@Basic.*/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="Agent.java" />
                </exec>


                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/protected transient List&lt;Agent.AgentAnyItem&gt; anyItems;//" />
  	          <arg value="-iBAK" />
  	          <arg value="Agent.java" />
                </exec>


                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e /@Entity(name = &quot;Agent$AgentAnyItem&quot;)/,/^}/ { /^}/b; s/^/\/\//g}" />
  	          <arg value="-iBAK" />
  	          <arg value="Agent.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ @XmlAccessorType(XmlAccessType.FIELD)//" />
  	          <arg value="-iBAK" />
  	          <arg value="Agent.java" />
                </exec>



<!-- IDRef -->


                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ @Column(name = &quot;REFITEM&quot;)/@Column(name = &quot;URI&quot;)public String getUri() { return ((this.getRef()==null)? null: this.getRef().getNamespaceURI() + this.getRef().getLocalPart()); } public void setUri(String uri) {} @Basic@Column(name = &quot;REFITEM&quot;)/" />
  	          <arg value="-iBAK" />
  	          <arg value="IDRef.java" />
                </exec>


         <!-- unique constraint-->

                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/@Table(name = &quot;IDREF&quot;)/@javax.persistence.Cacheable @Table(name = &quot;IDREF&quot;, uniqueConstraints=@javax.persistence.UniqueConstraint(columnNames={&quot;URI&quot;}))/" />
  	          <arg value="-iBAK" />
  	          <arg value="IDRef.java" />
                </exec>


<!-- Document -->


                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public int hashCode(Obj/\/* added in pom.xml *\/@javax.xml.bind.annotation.XmlTransient private java.util.Hashtable&lt;String,String&gt; nss=null; public java.util.Hashtable&lt;String,String&gt; getNss() { return nss;} public void setNss(java.util.Hashtable&lt;String,String&gt; s) { nss=s; };public int hashCode(Obj/" />
  	              <arg value="-iBAK" />
  	              <arg value="Document.java" />
                </exec>


		<exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/STATEMENTORBUNDLE_DOCUMENT_H_0/DOCUMENT/" />
  	              <arg value="-iBAK" />
  	              <arg value="Document.java" />
                </exec>

		<!-- renaming coluns in Documents -->

		<exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/ItemBundleContent/Bundle/" />
  	          <arg value="-iBAK" />
  	          <arg value="Document.java" />
                </exec>



<!-- NamedBundle -->


                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ public int hashCode(Obj/\/* added in pom.xml *\/@javax.xml.bind.annotation.XmlTransient private java.util.Hashtable&lt;String,String&gt; nss=null; public java.util.Hashtable&lt;String,String&gt; getNss() { return nss;} public void setNss(java.util.Hashtable&lt;String,String&gt; s) { nss=s; };public int hashCode(Obj/" />
  	              <arg value="-iBAK" />
  	              <arg value="NamedBundle.java" />
                </exec>



                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/STATEMENT__NAMEDBUNDLE_HJID/BUNDLE/" />
  	              <arg value="-iBAK" />
  	              <arg value="NamedBundle.java" />
                </exec>

<!-- IDRef -->

                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/^}$/\n\n    transient IDRef idRef;\n    @javax.persistence.ManyToOne(targetEntity = org.openprovenance.prov.sql.IDRef.class, cascade = {\n        CascadeType.ALL\n    })\n    @JoinColumn(name = &quot;IDREF&quot;)\n    public IDRef getIdRef() {\n        return idRef;\n    }\n\n    public void setIdRef(IDRef target) {\n        if (target!=null) { setId(target.getRef());\n        idRef=target;}\n    }\n\n}/" />
  	          <arg value="-iBAK" />
  	          <arg value="Entity.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/^}$/\n\n    transient IDRef idRef;\n    @javax.persistence.ManyToOne(targetEntity = org.openprovenance.prov.sql.IDRef.class, cascade = {\n        CascadeType.ALL\n    })\n    @JoinColumn(name = &quot;IDREF&quot;)\n    public IDRef getIdRef() {\n        return idRef;\n    }\n\n    public void setIdRef(IDRef target) {\n        if (target!=null) { setId(target.getRef());\n        idRef=target;}\n    }\n\n}/" />
  	          <arg value="-iBAK" />
  	          <arg value="Agent.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/^}$/\n\n    transient IDRef idRef;\n    @javax.persistence.ManyToOne(targetEntity = org.openprovenance.prov.sql.IDRef.class, cascade = {\n        CascadeType.ALL\n    })\n    @JoinColumn(name = &quot;IDREF&quot;)\n    public IDRef getIdRef() {\n        return idRef;\n    }\n\n    public void setIdRef(IDRef target) {\n        if (target!=null) { setId(target.getRef());\n        idRef=target;}\n    }\n\n}/" />
  	          <arg value="-iBAK" />
  	          <arg value="Activity.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/^}$/\n\n    transient IDRef idRef;\n    @javax.persistence.ManyToOne(targetEntity = org.openprovenance.prov.sql.IDRef.class, cascade = {\n        CascadeType.ALL\n    })\n    @JoinColumn(name = &quot;IDREF&quot;)\n    public IDRef getIdRef() {\n        return idRef;\n    }\n\n    public void setIdRef(IDRef target) {\n        if (target!=null) { setId(target.getRef());\n        idRef=target;}\n    }\n\n}/" />
  	          <arg value="-iBAK" />
  	          <arg value="WasDerivedFrom.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/^}$/\n\n    transient IDRef idRef;\n    @javax.persistence.ManyToOne(targetEntity = org.openprovenance.prov.sql.IDRef.class, cascade = {\n        CascadeType.ALL\n    })\n    @JoinColumn(name = &quot;IDREF&quot;)\n    public IDRef getIdRef() {\n        return idRef;\n    }\n\n    public void setIdRef(IDRef target) {\n        if (target!=null) { setId(target.getRef());\n        idRef=target;}\n    }\n\n}/" />
  	          <arg value="-iBAK" />
  	          <arg value="ActedOnBehalfOf.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/^}$/\n\n    transient IDRef idRef;\n    @javax.persistence.ManyToOne(targetEntity = org.openprovenance.prov.sql.IDRef.class, cascade = {\n        CascadeType.ALL\n    })\n    @JoinColumn(name = &quot;IDREF&quot;)\n    public IDRef getIdRef() {\n        return idRef;\n    }\n\n    public void setIdRef(IDRef target) {\n        if (target!=null) { setId(target.getRef());\n        idRef=target;}\n    }\n\n}/" />
  	          <arg value="-iBAK" />
  	          <arg value="WasGeneratedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/^}$/\n\n    transient IDRef idRef;\n    @javax.persistence.ManyToOne(targetEntity = org.openprovenance.prov.sql.IDRef.class, cascade = {\n        CascadeType.ALL\n    })\n    @JoinColumn(name = &quot;IDREF&quot;)\n    public IDRef getIdRef() {\n        return idRef;\n    }\n\n    public void setIdRef(IDRef target) {\n        if (target!=null) { setId(target.getRef());\n        idRef=target;}\n    }\n\n}/" />
  	          <arg value="-iBAK" />
  	          <arg value="Used.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/^}$/\n\n    transient IDRef idRef;\n    @javax.persistence.ManyToOne(targetEntity = org.openprovenance.prov.sql.IDRef.class, cascade = {\n        CascadeType.ALL\n    })\n    @JoinColumn(name = &quot;IDREF&quot;)\n    public IDRef getIdRef() {\n        return idRef;\n    }\n\n    public void setIdRef(IDRef target) {\n        if (target!=null) { setId(target.getRef());\n        idRef=target;}\n    }\n\n}/" />
  	          <arg value="-iBAK" />
  	          <arg value="WasInvalidatedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/^}$/\n\n    transient IDRef idRef;\n    @javax.persistence.ManyToOne(targetEntity = org.openprovenance.prov.sql.IDRef.class, cascade = {\n        CascadeType.ALL\n    })\n    @JoinColumn(name = &quot;IDREF&quot;)\n    public IDRef getIdRef() {\n        return idRef;\n    }\n\n    public void setIdRef(IDRef target) {\n        if (target!=null) { setId(target.getRef());\n        idRef=target;}\n    }\n\n}/" />
  	          <arg value="-iBAK" />
  	          <arg value="WasStartedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/^}$/\n\n    transient IDRef idRef;\n    @javax.persistence.ManyToOne(targetEntity = org.openprovenance.prov.sql.IDRef.class, cascade = {\n        CascadeType.ALL\n    })\n    @JoinColumn(name = &quot;IDREF&quot;)\n    public IDRef getIdRef() {\n        return idRef;\n    }\n\n    public void setIdRef(IDRef target) {\n        if (target!=null) { setId(target.getRef());\n        idRef=target;}\n    }\n\n}/" />
  	          <arg value="-iBAK" />
  	          <arg value="WasEndedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/^}$/\n\n    transient IDRef idRef;\n    @javax.persistence.ManyToOne(targetEntity = org.openprovenance.prov.sql.IDRef.class, cascade = {\n        CascadeType.ALL\n    })\n    @JoinColumn(name = &quot;IDREF&quot;)\n    public IDRef getIdRef() {\n        return idRef;\n    }\n\n    public void setIdRef(IDRef target) {\n        if (target!=null) { setId(target.getRef());\n        idRef=target;}\n    }\n\n}/" />
  	          <arg value="-iBAK" />
  	          <arg value="WasInformedBy.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/^}$/\n\n    transient IDRef idRef;\n    @javax.persistence.ManyToOne(targetEntity = org.openprovenance.prov.sql.IDRef.class, cascade = {\n        CascadeType.ALL\n    })\n    @JoinColumn(name = &quot;IDREF&quot;)\n    public IDRef getIdRef() {\n        return idRef;\n    }\n\n    public void setIdRef(IDRef target) {\n        if (target!=null) { setId(target.getRef());\n        idRef=target;}\n    }\n\n}/" />
  	          <arg value="-iBAK" />
  	          <arg value="WasAssociatedWith.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/^}$/\n\n    transient IDRef idRef;\n    @javax.persistence.ManyToOne(targetEntity = org.openprovenance.prov.sql.IDRef.class, cascade = {\n        CascadeType.ALL\n    })\n    @JoinColumn(name = &quot;IDREF&quot;)\n    public IDRef getIdRef() {\n        return idRef;\n    }\n\n    public void setIdRef(IDRef target) {\n        if (target!=null) { setId(target.getRef());\n        idRef=target;}\n    }\n\n}/" />
  	          <arg value="-iBAK" />
  	          <arg value="WasAttributedTo.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/^}$/\n\n    transient IDRef idRef;\n    @javax.persistence.ManyToOne(targetEntity = org.openprovenance.prov.sql.IDRef.class, cascade = {\n        CascadeType.ALL\n    })\n    @JoinColumn(name = &quot;IDREF&quot;)\n    public IDRef getIdRef() {\n        return idRef;\n    }\n\n    public void setIdRef(IDRef target) {\n        if (target!=null) { setId(target.getRef());\n        idRef=target;}\n    }\n\n}/" />
  	          <arg value="-iBAK" />
  	          <arg value="WasInfluencedBy.java" />
                </exec>

<!-- ObjectFactory -->

                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/new Attribute()/null/" />
  	              <arg value="-iBAK" />
  	              <arg value="ObjectFactory.java" />
                </exec>
                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	              <arg value="-e s/ TypedValue/ AValue/" />
  	              <arg value="-iBAK" />
  	              <arg value="ObjectFactory.java" />
                </exec>

<!-- remove some auto-generated files -->

                <exec executable="rm" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
                     <arg value="TypedValue.java" />
                </exec>
                <exec executable="rm" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
                     <arg value="Attribute.java" />
                </exec>
                <exec executable="rm" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
                     <arg value="Location.java" />
                </exec>
                <exec executable="rm" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
                     <arg value="Type.java" />
                </exec>
                <exec executable="rm" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
                     <arg value="Role.java" />
                </exec>
                <exec executable="rm" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
                     <arg value="Value.java" />
                </exec>


<!-- persistence.xml -->

                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/META-INF">
  	          <arg value="-e s/&lt;class&gt;org.openprovenance.prov.sql.Activity$ActivityAnyItem&lt;\/class&gt;//" />
  	          <arg value="-iBAK" />
  	          <arg value="persistence.xml" />
                </exec>

                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/META-INF">
  	          <arg value="-e s/org.openprovenance.prov.sql.Others/org.openprovenance.prov.sql.Attribute/" />
  	          <arg value="-iBAK" />
  	          <arg value="persistence.xml" />
                </exec>

                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/META-INF">
  	          <arg value="-e s/&lt;class&gt;org.openprovenance.prov.sql.*AnyItem&lt;\/class&gt;//" />
  	          <arg value="-iBAK" />
  	          <arg value="persistence.xml" />
                </exec>


<!-- declare Adapter in package -->

                <exec executable="sed" dir="${project.build.directory}/generated-sources/xjc/org/openprovenance/prov/sql">
  	          <arg value="-e s/^@javax.xml.bind.annotation.XmlSchema/@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(AnyAdapter.class)@javax.xml.bind.annotation.XmlSchema/" />
  	          <arg value="-iBAK" />
  	          <arg value="package-info.java" />
                </exec>

        

        
              </tasks>
              <sourceRoot>${project.build.directory}/generated-sources/xjc/</sourceRoot>
            </configuration>
          </execution>


        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.3</version>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.3.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>

   <pluginManagement>
     <plugins>
       <plugin>
         <groupId>org.jvnet.jaxb2.maven2</groupId>
         <artifactId>maven-jaxb2-plugin</artifactId>
         <version>0.8.1</version> 
       </plugin>
       
       <plugin> 
            <!--  This plugin's configuration is used to store Eclipse m2e settings 
                only. It has no influence on the Maven build itself. --> 
        <groupId>org.eclipse.m2e</groupId>
        <artifactId>lifecycle-mapping</artifactId>
        <version>1.0.0</version>
      <configuration>
        <lifecycleMappingMetadata>
          <pluginExecutions>
            <pluginExecution>
              <pluginExecutionFilter>
                <groupId>org.jvnet.jaxb2.maven2</groupId>
                <artifactId>maven-jaxb2-plugin</artifactId>
                <versionRange>[0.7.0,)</versionRange>
                <goals>
                  <goal>generate</goal>
                </goals>
              </pluginExecutionFilter>
              <action>
                <execute>
                  <runOnIncremental>false</runOnIncremental>
                </execute>
              </action>
            </pluginExecution>
            
            <pluginExecution>
              <pluginExecutionFilter>
                              <groupId>org.apache.maven.plugins</groupId>
              
                <artifactId>maven-antrun-plugin</artifactId>
                                <versionRange>[1.3,)</versionRange>
                
                <goals>
                  <goal>run</goal>
                </goals>
              </pluginExecutionFilter>
              <action>
                <execute>
                  <runOnIncremental>false</runOnIncremental>
                </execute>
              </action>
            </pluginExecution>


            <pluginExecution>
              <pluginExecutionFilter>
                <groupId>org.jvnet.hyperjaxb3</groupId>
                <artifactId>maven-hyperjaxb3-plugin</artifactId>
                <versionRange>[0.5.6,)</versionRange>
                <goals>
                  <goal>generate</goal>
                </goals>
              </pluginExecutionFilter>
              <action>
                <execute>
                  <runOnIncremental>false</runOnIncremental>
                </execute>
              </action>
            </pluginExecution>
          </pluginExecutions>
        </lifecycleMappingMetadata>
      </configuration>
      </plugin>
     </plugins>


   </pluginManagement>
      
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <testResources>
       <testResource>
         <directory>src/test/resources</directory>
         <filtering>true</filtering>
       </testResource>
    </testResources>
  </build>



</project>
